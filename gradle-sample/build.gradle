/*
 * Running gradle build will execute the following tasks in order. These tasks are 
 * sourced from the plugins applied below in the script.  
 * 
 * :compileJava
 * :processResources
 * :classes
 * :findMainClass
 * :jar
 * :bootRepackage
 * :assemble
 * :compileTestJava
 * :processTestResources
 * :testClasses
 * :test
 * :check
 * :build
 * 
 * 
 */

buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

/*
 * The Java plugin provides Java-based conventions, including the expected structure of 
 * source code under the src/ directory. 
 */
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

/*
 * Defines the attributes of the JAR. Includes the name and version. Can also specify the 
 * main class as part of the manifest, but with Boot its defined as part of properties. 
 */ 
jar {
	baseName = 'gradle-sample'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
